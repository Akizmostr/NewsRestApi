buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.google.protobuf" version "0.8.17"
    id 'java'
    id 'idea'
}

/*idea {
    module {
        generatedSourceDirs = [ file("generated-sources/main/java") ]

        sourceDirs += file("src/main/java")
        sourceDirs += file("generated-sources/main/java")
    }
}*/

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }

    generatedFilesBaseDir = "$projectDir/generated-sources"

    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // Here you can configure the task
        }

        // In addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        ofSourceSet('main')

    }
}

tasks.named("processResources"){
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

clean {
    delete protobuf.generatedFilesBaseDir
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.modelmapper:modelmapper:2.4.2'
    implementation 'net.kaczmarzyk:specification-arg-resolver:2.6.2'
    compileOnly 'org.junit.jupiter:junit-jupiter:5.8.1'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'com.google.protobuf:protobuf-java:3.0.0'
}



test {
    useJUnitPlatform()
}
